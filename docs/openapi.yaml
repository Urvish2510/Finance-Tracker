openapi: 3.1.0
info:
  title: Finance Tracker API
  version: 1.0.0
  description: API verified by automated Vitest + Supertest integration tests.
servers:
  - url: http://localhost:5000
paths:
  /health:
    get:
      summary: Service health
      responses:
        '200':
          description: OK
  /api/categories:
    get:
      summary: List categories
      responses:
        '200': { description: OK }
    post:
      summary: Create category
      responses:
        '201': { description: Created }
        '400': { description: Validation error }
  /api/categories/{id}:
    delete:
      summary: Delete category
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        '200': { description: Deleted }
        '400': { description: Linked items exist }
        '404': { description: Not found }
  /api/expenses:
    get:
      summary: List expenses
      responses:
        '200': { description: OK }
    post:
      summary: Create expense
      responses:
        '201': { description: Created }
        '400': { description: Validation error }
  /api/expenses/{id}:
    get:
      summary: Get expense
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        '200': { description: OK }
        '404': { description: Not found }
    put:
      summary: Update expense
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        '200': { description: Updated }
        '400': { description: Validation error }
        '404': { description: Not found }
    delete:
      summary: Delete expense
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        '200': { description: Deleted }
        '404': { description: Not found }
  /api/deposits:
    get:
      summary: List deposits
      responses:
        '200': { description: OK }
    post:
      summary: Create deposit
      responses:
        '201': { description: Created }
        '400': { description: Validation error }
  /api/deposits/{id}:
    get:
      summary: Get deposit
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        '200': { description: OK }
        '404': { description: Not found }
    put:
      summary: Update deposit
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        '200': { description: Updated }
        '400': { description: Validation error }
        '404': { description: Not found }
    delete:
      summary: Delete deposit
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        '200': { description: Deleted }
        '404': { description: Not found }
  /api/settings:
    get:
      summary: Get settings
      responses:
        '200': { description: OK }
    post:
      summary: Create/upsert settings
      responses:
        '201': { description: Created }
        '400': { description: Validation error }
    put:
      summary: Update settings
      responses:
        '200': { description: Updated }
        '400': { description: Validation error }
  /api/analytics/summary:
    get:
      summary: Analytics summary
      parameters:
        - name: month
          in: query
          description: Month filter in YYYY-MM format (mutually exclusive with startDate/endDate and period)
          schema: { type: string, pattern: '^\d{4}-\d{2}$' }
        - name: startDate
          in: query
          description: ISO date (YYYY-MM-DD) range start (requires endDate)
          schema: { type: string, format: date }
        - name: endDate
          in: query
          description: ISO date (YYYY-MM-DD) range end (requires startDate)
          schema: { type: string, format: date }
        - name: period
          in: query
          description: Rolling window ending now (week|month|quarter|year)
          schema:
            type: string
            enum: [week, month, quarter, year]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  range:
                    type: object
                    properties:
                      month: { type: string, nullable: true }
                      period: { type: string, nullable: true }
                      startDate: { type: string, format: date-time, nullable: true }
                      endDate: { type: string, format: date-time, nullable: true }
                  totalExpenses: { type: number }
                  totalIncome: { type: number }
                  balance: { type: number }
                  currency: { type: string }
                  categoryBreakdown:
                    type: array
                    items:
                      type: object
                      properties:
                        _id: { type: string }
                        name: { type: string }
                        icon: { type: string }
                        color: { type: string }
                        total: { type: number }
                        count: { type: number }
        '400': { description: Invalid query parameters }
  /api/analytics/budget-status:
    get:
      summary: Budget status
      responses:
        '200': { description: OK }
